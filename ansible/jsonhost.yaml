# =============================================================================
# run locally with:
# ansible-playbook -c local -i localhost, /tmp/jsonhost.yaml
#
# generate password using command:
#   ansible all -i localhost, -m debug -a "msg={{ 'fronius' | password_hash('sha512', 'mysecretsalt') }}"
# =============================================================================

- name: Setup json host
  hosts: all
  become: true

# =============================================================================
# playbook variables
# =============================================================================

  vars:

    ftp_user: fronius
    my_user: mem

    html_path: /var/www/html/inverter
    esp32_path: /var/www/html/esp32v5

    basePackages:
    - open-vm-tools
    - unp
    - curl
    - vim
    - iotop
    - nginx
    - software-properties-common
    - net-tools
    - unzip
    - vsftpd
    - screen

# =============================================================================
# playbook tasks
# =============================================================================

  tasks:

# =============================================================================
# user_create

  - name: Add Groups
    ansible.builtin.group:
      name: "{{ item }}"
      state: present
    loop:
      - "{{ ftp_user }}"
      - html
    tags:
      - user_create

  - name: Add User
    ansible.builtin.user:
      name: "{{ ftp_user }}"
      shell: /bin/bash
      state: present
      groups: "{{ ftp_user }},html"
      # password: fronius
      password: $6$mysecretsalt$2NxuoV7DAudNHwi7YBl00XRIVYmUP4Z0vG3Rkw/go9bM82nzgB3Eky4ERCaiHXNWqfjqM7n2AdUhnN0AkUq/2/
    tags:
      - user_create

  - name: setting up my user
    user:
      name: "{{ my_user }}"
      groups: sudo,html
      append: yes

# =============================================================================
# install Files and set permissions

  - name: Install acl
    apt:
      name: acl
      state: latest
    tags:
      - aptInstall
      - base
      - setup

  - name: create html dirs
    ansible.builtin.file:
      path: "{{ item }}"
      state: directory
      owner: "root"
      group: "html"
      mode: "2775"
    loop:
      - "{{ html_path }}"
      - "{{ esp32_path }}"
    tags:
      - setup
      - dirs

  - name: Grant group rw read access to html dirs
    ansible.posix.acl:
      path: "{{ item }}"
      entity: html
      etype: group
      permissions: rw
      state: present
      default: true
      recursive: true
    loop:
      - "{{ html_path }}"
      - "{{ esp32_path }}"
    tags:
      - setup
      - dirs

# =============================================================================
# apt update and upgrade

  - name: apt update cache
    apt:
      update_cache: yes
    tags:
      - aptUpdate

  - name: apt dist-upgrade
    apt:
      upgrade: dist
    tags:
      - aptUpdate

# =============================================================================
# apt install deps

  - name: Install base packages
    apt:
      name: "{{ item }}"
      state: latest
      update_cache: yes
    loop: "{{ basePackages }}"
    tags:
      - aptInstall
      - base


# =============================================================================
# vsftpd setup

  - name: config vsftpd
    ansible.builtin.lineinfile:
      path: /etc/vsftpd.conf
      line: write_enable=YES
      create: yes
    tags:
      - vsftpd

  - name: config vsftpd
    ansible.builtin.lineinfile:
      path: /etc/vsftpd.conf
      line: local_root=/
      create: yes
    tags:
      - vsftpd

  - name: Restart vsftpd
    ansible.builtin.systemd:
      state: restarted
      daemon_reload: true
      name: vsftpd

# =============================================================================
# configure ngnix

  - name: start nginx
    ansible.builtin.systemd:
      enabled: true
      state: started
      name: nginx
    tags:
      - nginx-start
      - never

# =============================================================================
# copy json fetch script

  - name: create /root/bin
    ansible.builtin.file:
      path: "{{ item }}"
      state: directory
      owner: "root"
      group: "root"
      mode: "0770"
    loop:
      - "/root/bin"

  - name: Copy script
    ansible.builtin.copy:
      src:  "{{ playbook_dir }}/scripts/fetch.json.sh"
      dest: "/root/bin/fetch.json.sh"
      owner: root
      group: root
      mode: '0700'


  - name: create cronjob
    ansible.builtin.cron:
      name: "fetch json"
      job: "/root/bin/fetch.json.sh &> /dev/null"

